services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - web

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      traefik:
        condition: service_started
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - web

  pg-admin:
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@email.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5430:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pg-admin.rule=Host(`pg-admin.localhost`)"
      - "traefik.http.routers.pg-admin.entrypoints=web"
      - "traefik.http.services.pg-admin.loadbalancer.server.port=80"
    depends_on:
      db:
        condition: service_healthy
      traefik:
        condition: service_started
    networks:
      - web

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9094:9094' 
    depends_on:
      db:
        condition: service_healthy
      traefik:
        condition: service_started
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_BROKER_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094 
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094 
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT 
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - web

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '7070:8080'
    depends_on:
      kafka:
        condition: service_started
      traefik:
        condition: service_started
    environment:
      - KAFKA_CLUSTERS_0_NAME=local 
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafka-ui.rule=Host(`kafka-ui.localhost`)"
      - "traefik.http.routers.kafka-ui.entrypoints=web"
      - "traefik.http.services.kafka-ui.loadbalancer.server.port=80"
    networks:
      - web


networks:
  web:
    external: true